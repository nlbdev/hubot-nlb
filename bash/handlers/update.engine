#!/bin/bash
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR

LOG="`tempfile`"
function finish {
    LOG2="`tempfile`"
    head -n 1 $LOG >> $LOG2
    echo >> $LOG2
    tail -n +2 $LOG >> $LOG2
    cat $LOG2
    rm $LOG $LOG2
}
trap finish EXIT

. ~/config/set-env.sh

REPO_URL="http://$REPO_PUBLIC_HOST/pipeline/"

cd /opt/daisy-pipeline2

VERSION="$1"
if [ "$VERSION" = "" ]; then
    VERSION="current"
fi

FORCE="$2"
#if [ "$FORCE" = "force" ]; then
    FORCE="-force"
#else
#    FORCE=""
#fi

echo "Installing/updating Pipeline 2..."
updater/linux/pipeline-updater \
    -descriptor "/opt/daisy-pipeline2/etc/releaseDescriptor.xml" \
    -install-dir "/opt/daisy-pipeline2/" \
    -service "$REPO_URL" \
    -version "$VERSION" \
    $FORCE \
    | grep -v "^.INFO. Artifact" >> $LOG 2>&1

# config.yml for the CLI not currently bundled with neither minimal zip nor updater
CONFIG_YML="/opt/daisy-pipeline2/cli/config.yml"
if [ ! -f $CONFIG_YML ]; then
    echo "Creating config.yml for the CLI" >> $LOG 2>&1
    mkdir -p "/opt/daisy-pipeline2/cli"
    echo 'host: http://localhost' >> $CONFIG_YML
    echo 'port: 8181' >> $CONFIG_YML
    echo 'ws_path: ws' >> $CONFIG_YML
    echo 'ws_timeup: 25' >> $CONFIG_YML
    echo 'exec_line: ../bin/pipeline2' >> $CONFIG_YML
    echo 'local: true' >> $CONFIG_YML
    echo 'client_key: clientid' >> $CONFIG_YML
    echo 'client_secret: supersecret' >> $CONFIG_YML
    echo 'timeout: 60' >> $CONFIG_YML
    echo 'debug: false' >> $CONFIG_YML
    echo 'starting: true' >> $CONFIG_YML
fi

echo "Done with installing/updating" >> $LOG 2>&1

exit 0
