#!/bin/bash
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR

LOG="`tempfile`"
function finish {
    LOG2="`tempfile`"
    head -n 1 $LOG >> $LOG2
    echo >> $LOG2
    tail -n +2 $LOG >> $LOG2
    cat $LOG2
    rm $LOG $LOG2
}
trap finish EXIT

. ~/config/set-env.sh

REPO_URL="http://$REPO_PUBLIC_HOST/pipeline/"

cd /opt/daisy-pipeline2

VERSION="$1"
if [ "$VERSION" = "" ]; then
    VERSION="current"
fi

CURRENT_VERSION="`cat /opt/daisy-pipeline2/etc/releaseDescriptor.xml | grep '<releaseDescriptor' | sed 's/.*<releaseDescriptor[^>]* version="//' | sed 's/".*//'`"
CURRENT_HREF="`cat /opt/daisy-pipeline2/etc/releaseDescriptor.xml | grep '<releaseDescriptor' | sed 's/.*<releaseDescriptor[^>]* href="//' | sed 's/".*//'`"
CURRENT_TIMESTAMP="`cat /opt/daisy-pipeline2/etc/releaseDescriptor.xml 2>/dev/null | grep '<releaseDescriptor' | sed 's/.*<releaseDescriptor[^>]* time="//' | sed 's/".*//'`"

echo "Pipeline 2 engine currently installed: $CURRENT_VERSION" >> $LOG 2>&1
echo "This version of the Pipeline 2 engine was built: $CURRENT_TIMESTAMP" >> $LOG 2>&1

TEMPFILE="`tempfile`"
curl "$REPO_URL/current" 2>/dev/null > "$TEMPFILE"
LATEST_VERSION="`cat "$TEMPFILE" | grep '<releaseDescriptor' | sed 's/.*<releaseDescriptor[^>]* version="//' | sed 's/".*//'`"
LATEST_HREF="`cat "$TEMPFILE" | grep '<releaseDescriptor' | sed 's/.*<releaseDescriptor[^>]* href="//' | sed 's/".*//'`"
LATEST_TIMESTAMP="`cat "$TEMPFILE" | grep '<releaseDescriptor' | sed 's/.*<releaseDescriptor[^>]* time="//' | sed 's/".*//'`"
rm "$TEMPFILE"

if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
    echo "The Pipeline 2 engine is up to date." >> $LOG 2>&1
else
    echo "A newer version of the Pipeline 2 engine is available." >> $LOG 2>&1
    echo "Latest available Pipeline 2 engine: $LATEST_VERSION" >> $LOG 2>&1
    echo "The latest available version of the Pipeline 2 engine was built: $LATEST_TIMESTAMP" >> $LOG 2>&1
fi

exit 0
